{"version":3,"sources":["scripts/offsetConfig.js","scripts/directionsConfig.js","scripts/main.js"],"names":["module","exports","one","two","three","four","up","down","right","left","offset","require","directions","everySquare","Array","from","document","querySelectorAll","everyRow","mainButton","querySelector","gameScore","canMoveInAnyDirection","touchStartX","touchStartY","score","COLUMN_LENGTH","appendNumber","emptySquares","filter","square","innerHTML","length","setCellValue","Math","floor","random","setColumn","filtered","map","cell","parseInt","value","className","getNewRow","column","direction","num","missing","unfilled","fill","concat","checkMoveAndFinish","includes","checkIfGameFinished","moveDown","i","filteredColumn","td","cellIndex","moveAndCombine","moveUp","moveRight","tr","rowIndex","cells","moveLeft","newRow","canMove","move","combine","row","collection","k","prev","total","hasPairs","updateScore","markMovementPossible","push","j","emptyString","find","col","curr","isWon","classList","remove","gameOver","currCell","rightCell","bottomCell","isGameOver","restart","forEach","handleTouchStart","e","touches","clientX","clientY","handleTouchMove","touchEndX","touchEndY","deltaX","deltaY","abs","addEventListener","target","add","contains","key"],"mappings":"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","file":"main.4ec67758.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nmodule.exports = {\n  one: 1,\n  two: 2,\n  three: 3,\n  four: 4,\n};\n","'use strict';\n\nmodule.exports = {\n  up: 'up',\n  down: 'down',\n  right: 'right',\n  left: 'left',\n};\n","'use strict';\n\nconst offset = require('./offsetConfig');\nconst directions = require('./directionsConfig');\n\nconst everySquare = Array.from(document.querySelectorAll('.field-cell'));\nconst everyRow = Array.from(document.querySelectorAll('.field-row'));\nconst mainButton = document.querySelector('.start');\nconst gameScore = document.querySelector('.game-score');\nlet canMoveInAnyDirection = [];\nlet touchStartX = 0;\nlet touchStartY = 0;\nlet score = 0;\n\nconst COLUMN_LENGTH = 4;\n\nfunction appendNumber() {\n  const emptySquares = everySquare.filter(square => square.innerHTML === '');\n\n  if (emptySquares.length === 0) {\n    return;\n  }\n\n  const index = Math.floor(Math.random() * emptySquares.length);\n  const randomSquare = emptySquares[index];\n  const value = Math.random() > 0.9 ? 4 : 2;\n\n  setCellValue(randomSquare, value);\n}\n\nfunction setColumn(filtered) {\n  return filtered.map(cell => parseInt(cell.innerHTML, 10) || '');\n}\n\nfunction setCellValue(cell, value) {\n  cell.innerHTML = value || '';\n  cell.className = 'field-cell' + (value ? ` field-cell--${value}` : '');\n}\n\nfunction getNewRow(column, direction) {\n  const filtered = column.filter(num => num);\n  const missing = COLUMN_LENGTH - filtered.length;\n  const unfilled = Array(missing).fill('');\n\n  return (\n    direction === directions.down || direction === directions.right\n      ? unfilled.concat(filtered)\n      : filtered.concat(unfilled)\n  );\n}\n\nfunction checkMoveAndFinish() {\n  if (canMoveInAnyDirection.includes(true)) {\n    canMoveInAnyDirection = [];\n    appendNumber();\n  }\n\n  checkIfGameFinished();\n}\n\nfunction moveDown() {\n  for (let i = 0; i < everyRow.length; i++) {\n    const filteredColumn = everySquare.filter(td => td.cellIndex === i);\n\n    moveAndCombine(directions.down, filteredColumn);\n  };\n\n  checkMoveAndFinish();\n}\n\nfunction moveUp() {\n  for (let i = 0; i < everyRow.length; i++) {\n    const filteredColumn = everySquare.filter(td => td.cellIndex === i);\n\n    moveAndCombine(directions.up, filteredColumn);\n  };\n\n  checkMoveAndFinish();\n}\n\nfunction moveRight() {\n  for (let i = 0; i < everyRow.length; i++) {\n    const filteredColumn = everyRow.filter(tr => tr.rowIndex === i)[0].cells;\n\n    moveAndCombine(directions.right, filteredColumn);\n  };\n\n  checkMoveAndFinish();\n}\n\nfunction moveLeft() {\n  for (let i = 0; i < everyRow.length; i++) {\n    const filteredColumn = everyRow.filter(tr => tr.rowIndex === i)[0].cells;\n\n    moveAndCombine(directions.left, filteredColumn);\n  };\n\n  checkMoveAndFinish();\n}\n\nfunction moveAndCombine(direction, filteredColumn) {\n  const column = setColumn([...filteredColumn]);\n  const newRow = getNewRow(column, direction);\n\n  if (canMove(direction, column)) {\n    move(filteredColumn, newRow);\n    combine(direction, newRow, filteredColumn);\n  }\n}\n\nfunction combine(direction, row, collection) {\n  if (direction === directions.left || direction === directions.up) {\n    for (let k = 1; k < row.length; k++) {\n      const prev = row[k - offset.one];\n      const total = row[k] + prev;\n      const hasPairs = (\n        row[k] === prev\n        && prev !== ''\n        && row[k + offset.one]\n        && row[k + offset.two]\n        && row[k + offset.one] === row[k + offset.two]\n      );\n\n      if (hasPairs) {\n        row[k - offset.one] = total;\n        row[k] = row[k + offset.one] + row[k + offset.two];\n        row[k + offset.one] = '';\n        row[k + offset.two] = '';\n\n        updateScore(total + row[k]);\n\n        setCellValue(collection[k - offset.one], total);\n        setCellValue(collection[k], row[k]);\n        setCellValue(collection[k + offset.one], row[k + offset.one]);\n        setCellValue(collection[k + offset.two], row[k + offset.two]);\n\n        break;\n      }\n\n      if (row[k] === prev && row[k]) {\n        row[k - offset.one] = total;\n        row[k] = '';\n\n        updateScore(total);\n\n        setCellValue(collection[k - offset.one], total);\n        setCellValue(collection[k], row[k]);\n      }\n\n      if (row[k] && prev === '') {\n        row[k - offset.one] = row[k];\n        row[k] = '';\n\n        setCellValue(collection[k - offset.one], row[k - offset.one]);\n        setCellValue(collection[k], row[k]);\n      }\n    }\n  }\n\n  if (direction === directions.right || direction === directions.down) {\n    for (let k = row.length - 1; k > 0; k--) {\n      const prev = row[k - offset.one];\n      const total = row[k] + prev;\n      const hasPairs = (\n        row[k] === prev\n        && prev !== ''\n        && row[k - offset.two]\n        && row[k - offset.three]\n        && row[k - offset.two] === row[k - offset.three]\n      );\n\n      if (hasPairs) {\n        row[k] = total;\n        row[k - offset.one] = row[k - offset.two] + row[k - offset.three];\n        row[k - offset.two] = '';\n        row[k - offset.three] = '';\n\n        updateScore(total + row[k]);\n\n        setCellValue(collection[k], total);\n        setCellValue(collection[k - offset.one], row[k - offset.one]);\n        setCellValue(collection[k - offset.two], '');\n        setCellValue(collection[k - offset.three], '');\n\n        break;\n      }\n\n      if (row[k] === prev && prev) {\n        row[k - offset.one] = '';\n        row[k] = total;\n\n        updateScore(total);\n\n        setCellValue(collection[k], total);\n        setCellValue(collection[k - offset.one], '');\n      }\n\n      if (prev && row[k] === '') {\n        row[k] = row[k - offset.one];\n        row[k - offset.one] = '';\n\n        setCellValue(collection[k], row[k]);\n        setCellValue(collection[k - offset.one], '');\n      }\n    }\n  }\n}\n\nfunction markMovementPossible() {\n  canMoveInAnyDirection.push(true);\n\n  return true;\n}\n\nfunction move(filteredColumn, row) {\n  for (let j = 0; j < filteredColumn.length; j++) {\n    setCellValue(filteredColumn[j], row[j]);\n  }\n}\n\nfunction canMove(direction, column) {\n  if (direction === directions.left || direction === directions.up) {\n    for (let j = 1; j < column.length; j++) {\n      const emptyString = column.find(col => col === '');\n      const curr = column[j];\n      const prev = column[j - offset.one];\n\n      if (prev === emptyString && curr) {\n        return markMovementPossible();\n      }\n\n      if (column[0] === '' && curr) {\n        return markMovementPossible();\n      }\n\n      if ((curr && prev) && (curr === prev)) {\n        return markMovementPossible();\n      }\n    }\n  }\n\n  if (direction === directions.right || direction === directions.down) {\n    for (let j = column.length - 1; j > 0; j--) {\n      const emptyString = column.find(col => col === '');\n      const curr = column[j];\n      const prev = column[j - offset.one];\n\n      if (curr === emptyString && prev) {\n        return markMovementPossible();\n      }\n\n      if (column[column.length - 1] === '' && curr) {\n        return markMovementPossible();\n      }\n\n      if ((curr && prev) && (curr === prev)) {\n        return markMovementPossible();\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction checkIfGameFinished() {\n  const cells = Array.from(document.querySelectorAll('td'));\n  const isWon = cells.find(cell => cell.innerHTML.includes('2048'));\n\n  if (isWon) {\n    document.querySelector('.message-win').classList.remove('hidden');\n\n    return;\n  }\n\n  let gameOver = true;\n\n  for (let i = 0; i < cells.length; i++) {\n    const currCell = cells[i];\n    const rightCell = cells[i + offset.one];\n    const bottomCell = cells[i + offset.four];\n    const isGameOver = !currCell.innerHTML || (\n      rightCell && currCell.cellIndex !== 3\n      && currCell.innerHTML === rightCell.innerHTML\n    ) || (bottomCell && currCell.innerHTML === bottomCell.innerHTML);\n\n    if (isGameOver) {\n      gameOver = false;\n      break;\n    }\n  }\n\n  if (gameOver) {\n    document.querySelector('.message-lose').classList.remove('hidden');\n  }\n}\n\nfunction updateScore(value) {\n  score += value;\n  gameScore.innerHTML = score;\n}\n\nfunction restart() {\n  Array.from(document.querySelectorAll('td')).forEach(cell => {\n    setCellValue(cell, '');\n  });\n\n  score = 0;\n\n  updateScore(score);\n  appendNumber();\n  appendNumber();\n}\n\nmainButton.addEventListener('click', (e) => {\n  const { target } = e;\n\n  document.querySelector('.message-start').classList.add('hidden');\n  document.querySelector('.message-win').classList.add('hidden');\n  document.querySelector('.message-lose').classList.add('hidden');\n\n  target.classList.remove('start');\n  target.classList.add('restart');\n  target.innerHTML = 'Restart';\n\n  if (target.classList.contains('restart')) {\n    restart();\n  }\n});\n\ndocument.addEventListener('keyup', (e) => {\n  switch (e.key) {\n    case 'ArrowDown':\n      moveDown();\n      break;\n\n    case 'ArrowUp':\n      moveUp();\n      break;\n\n    case 'ArrowRight':\n      moveRight();\n      break;\n\n    case 'ArrowLeft':\n      moveLeft();\n      break;\n\n    default:\n      break;\n  }\n});\n\ndocument.addEventListener('touchstart', handleTouchStart, false);\ndocument.addEventListener('touchmove', handleTouchMove, false);\n\nfunction handleTouchStart(e) {\n  touchStartX = e.touches[0].clientX;\n  touchStartY = e.touches[0].clientY;\n}\n\nfunction handleTouchMove(e) {\n  if (!touchStartX || !touchStartY) {\n    return;\n  }\n\n  const touchEndX = e.touches[0].clientX;\n  const touchEndY = e.touches[0].clientY;\n  const deltaX = touchEndX - touchStartX;\n  const deltaY = touchEndY - touchStartY;\n\n  Math.abs(deltaX) > Math.abs(deltaY)\n    ? deltaX > 0 ? moveRight() : moveLeft()\n    : deltaY > 0 ? moveDown() : moveUp();\n\n  touchStartX = 0;\n  touchStartY = 0;\n}\n"]}